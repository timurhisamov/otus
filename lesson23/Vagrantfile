# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:inetRouter => {
  :box_name => "centos/7",
  #:public => {:ip => '10.10.10.1', :adapter => 1},
  :net => [
    {ip: '', adapter: 2, netmask: "", virtualbox__intnet: "router-net"},
    {ip: '', adapter: 3, netmask: "", virtualbox__intnet: "router-net"},
  ]
},
:centralRouter => {
  :box_name => "centos/7",
  :net => [
    {ip: '', adapter: 2, netmask: "", virtualbox__intnet: "router-net"},
    {ip: '192.168.255.5', adapter: 3, netmask: "255.255.255.252", virtualbox__intnet: "router-net1"},
    {ip: '192.168.255.9', adapter: 4, netmask: "255.255.255.252", virtualbox__intnet: "router-net2"},
    {ip: '192.168.0.1', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "central-net"},
    {ip: '', adapter: 6, netmask: "", virtualbox__intnet: "router-net"},
    #{ip: '192.168.0.33', adapter: 6, netmask: "255.255.255.192", virtualbox__intnet: "hw-net"},
    #{ip: '192.168.0.65', adapter: 7, netmask: "255.255.255.192", virtualbox__intnet: "wifi-net"},
  ]
},
:inetRouter2 => {
  :box_name => "centos/7",
  :net => [
    {ip: '192.168.255.6', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net1"},
    {ip: '192.168.2.1', adapter: 3, netmask: "255.255.255.192", virtualbox__intnet: "dev-net1"},
    {ip: '192.168.2.65', adapter: 4, netmask: "255.255.255.192", virtualbox__intnet: "testserv-net1"},
    {ip: '192.168.2.129', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "managers-net1"},
    {ip: '192.168.2.193', adapter: 6, netmask: "255.255.255.192", virtualbox__intnet: "hw-net1"},
    {ip: '', adapter: 7, netmask: "", virtualbox__intnet: "testLAN"},
    {ip: '', adapter: 8, netmask: "", virtualbox__intnet: "testLAN"},
  ]
}
}

Vagrant.configure("2") do |config|

  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = ENV['http_proxy']
    config.proxy.https    = ENV['https_proxy']
    config.proxy.no_proxy = ENV['no_proxy']
  end
  MACHINES.each do |boxname, boxconfig|
  config.vbguest.auto_update = false
  config.vm.box_check_update = false
  config.vm.define boxname do |box|
    box.vm.box = boxconfig[:box_name]
    box.vm.host_name = boxname.to_s
    config.vm.provider "virtualbox" do |v|
      v.memory = 256      
    end
    boxconfig[:net].each do |ipconf|
      box.vm.network "private_network", ipconf
    end
    
    if boxconfig.key?(:public)
      box.vm.network "public_network", boxconfig[:public]
    end
    box.vm.provision "shell", inline: <<-SHELL
    mkdir -p ~root/.ssh
      cp ~vagrant/.ssh/auth* ~root/.ssh
    SHELL
    
    case boxname.to_s
      when "inetRouter"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          modprobe --first-time bonding
          echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf
          iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
          
      SHELL
      when "centralRouter"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf
          
      SHELL
      when "inetRouter2"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          echo "net.ipv4.conf.all.forwarding=1" >> /etc/sysctl.conf
          
      SHELL
    end
  end
end
end

